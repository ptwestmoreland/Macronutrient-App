// Generated by view binder compiler. Do not edit!
package com.example.mealslog.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mealslog.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AppSettingsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button button3;

  @NonNull
  public final Button button4;

  @NonNull
  public final EditText editTextCalsSetting;

  @NonNull
  public final EditText editTextCarbsSetting;

  @NonNull
  public final EditText editTextFatSetting;

  @NonNull
  public final EditText editTextProtSetting;

  @NonNull
  public final TextView settingsTitle;

  @NonNull
  public final TextView settingsTitle2;

  @NonNull
  public final TextView textViewCalsSetting;

  @NonNull
  public final TextView textViewCarbsSetting;

  @NonNull
  public final TextView textViewFatSetting;

  @NonNull
  public final TextView textViewProtSetting;

  @NonNull
  public final Toolbar toolbar3;

  private AppSettingsBinding(@NonNull LinearLayout rootView, @NonNull Button button3,
      @NonNull Button button4, @NonNull EditText editTextCalsSetting,
      @NonNull EditText editTextCarbsSetting, @NonNull EditText editTextFatSetting,
      @NonNull EditText editTextProtSetting, @NonNull TextView settingsTitle,
      @NonNull TextView settingsTitle2, @NonNull TextView textViewCalsSetting,
      @NonNull TextView textViewCarbsSetting, @NonNull TextView textViewFatSetting,
      @NonNull TextView textViewProtSetting, @NonNull Toolbar toolbar3) {
    this.rootView = rootView;
    this.button3 = button3;
    this.button4 = button4;
    this.editTextCalsSetting = editTextCalsSetting;
    this.editTextCarbsSetting = editTextCarbsSetting;
    this.editTextFatSetting = editTextFatSetting;
    this.editTextProtSetting = editTextProtSetting;
    this.settingsTitle = settingsTitle;
    this.settingsTitle2 = settingsTitle2;
    this.textViewCalsSetting = textViewCalsSetting;
    this.textViewCarbsSetting = textViewCarbsSetting;
    this.textViewFatSetting = textViewFatSetting;
    this.textViewProtSetting = textViewProtSetting;
    this.toolbar3 = toolbar3;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AppSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AppSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.app_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AppSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button3;
      Button button3 = ViewBindings.findChildViewById(rootView, id);
      if (button3 == null) {
        break missingId;
      }

      id = R.id.button4;
      Button button4 = ViewBindings.findChildViewById(rootView, id);
      if (button4 == null) {
        break missingId;
      }

      id = R.id.editTextCalsSetting;
      EditText editTextCalsSetting = ViewBindings.findChildViewById(rootView, id);
      if (editTextCalsSetting == null) {
        break missingId;
      }

      id = R.id.editTextCarbsSetting;
      EditText editTextCarbsSetting = ViewBindings.findChildViewById(rootView, id);
      if (editTextCarbsSetting == null) {
        break missingId;
      }

      id = R.id.editTextFatSetting;
      EditText editTextFatSetting = ViewBindings.findChildViewById(rootView, id);
      if (editTextFatSetting == null) {
        break missingId;
      }

      id = R.id.editTextProtSetting;
      EditText editTextProtSetting = ViewBindings.findChildViewById(rootView, id);
      if (editTextProtSetting == null) {
        break missingId;
      }

      id = R.id.settings_title;
      TextView settingsTitle = ViewBindings.findChildViewById(rootView, id);
      if (settingsTitle == null) {
        break missingId;
      }

      id = R.id.settings_title2;
      TextView settingsTitle2 = ViewBindings.findChildViewById(rootView, id);
      if (settingsTitle2 == null) {
        break missingId;
      }

      id = R.id.textViewCalsSetting;
      TextView textViewCalsSetting = ViewBindings.findChildViewById(rootView, id);
      if (textViewCalsSetting == null) {
        break missingId;
      }

      id = R.id.textViewCarbsSetting;
      TextView textViewCarbsSetting = ViewBindings.findChildViewById(rootView, id);
      if (textViewCarbsSetting == null) {
        break missingId;
      }

      id = R.id.textViewFatSetting;
      TextView textViewFatSetting = ViewBindings.findChildViewById(rootView, id);
      if (textViewFatSetting == null) {
        break missingId;
      }

      id = R.id.textViewProtSetting;
      TextView textViewProtSetting = ViewBindings.findChildViewById(rootView, id);
      if (textViewProtSetting == null) {
        break missingId;
      }

      id = R.id.toolbar3;
      Toolbar toolbar3 = ViewBindings.findChildViewById(rootView, id);
      if (toolbar3 == null) {
        break missingId;
      }

      return new AppSettingsBinding((LinearLayout) rootView, button3, button4, editTextCalsSetting,
          editTextCarbsSetting, editTextFatSetting, editTextProtSetting, settingsTitle,
          settingsTitle2, textViewCalsSetting, textViewCarbsSetting, textViewFatSetting,
          textViewProtSetting, toolbar3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
